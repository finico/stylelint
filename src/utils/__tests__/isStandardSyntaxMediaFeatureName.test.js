import isStandardSyntaxMediaFeatureName from "../isStandardSyntaxMediaFeatureName"

it("isStandardSyntaxMediaFeatureName", () => {
  expect(isStandardSyntaxMediaFeatureName("min-width")).toBeTruthy()
  expect(isStandardSyntaxMediaFeatureName("-webkit-min-device-pixel-ratio")).toBeTruthy()
  expect(isStandardSyntaxMediaFeatureName("--viewport-medium")).toBeTruthy()
  expect(isStandardSyntaxMediaFeatureName("$sass-variable")).toBeFalsy()
  expect(isStandardSyntaxMediaFeatureName("min-width + $value")).toBeFalsy()
  expect(isStandardSyntaxMediaFeatureName("$value + min-width")).toBeFalsy()
  expect(isStandardSyntaxMediaFeatureName("'min-width + $value'")).toBeFalsy()
  expect(isStandardSyntaxMediaFeatureName("'$value + min-width'")).toBeFalsy()
  expect(isStandardSyntaxMediaFeatureName("\"min-width + $value\"")).toBeFalsy()
  expect(isStandardSyntaxMediaFeatureName("\"$value + min-width\"")).toBeFalsy()
  expect(isStandardSyntaxMediaFeatureName("min-width#{$value}")).toBeFalsy()
  expect(isStandardSyntaxMediaFeatureName("#{$value}min-width")).toBeFalsy()
  expect(isStandardSyntaxMediaFeatureName("'min-width#{$value}'")).toBeFalsy()
  expect(isStandardSyntaxMediaFeatureName("'#{$value}min-width'")).toBeFalsy()
  expect(isStandardSyntaxMediaFeatureName("\"min-width#{$value}\"")).toBeFalsy()
  expect(isStandardSyntaxMediaFeatureName("\"#{$value}min-width\"")).toBeFalsy()
})
